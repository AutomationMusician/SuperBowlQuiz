version: "3.8"
services:
  web:
    build: .
    image: automationmusician/superbowlquiz:latest
    restart: unless-stopped
    environment:
      WEB_PORT: ${WEB_PORT}
      PGHOST: postgres
      PGUSER: ${PGUSER}
      PGDATABASE: ${PGDATABASE}
      PGPORT: ${PGPORT}
      PGPASSWORD: ${PGPASSWORD}
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    volumes:
      - "./configs:/usr/src/superbowlquiz/configs"
  admin-console:
    build: .
    image: automationmusician/superbowlquiz:latest
    entrypoint: "npm run admin-console"
    environment:
      PGHOST: postgres
      PGUSER: ${PGUSER}
      PGDATABASE: ${PGDATABASE}
      PGPORT: ${PGPORT}
      PGPASSWORD: ${PGPASSWORD}
  postgres:
    image: postgres:16
    user: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    ports:
      - "${PGPORT}:5432"
  initialize_database:
    image: postgres:16
    user: postgres
    depends_on: 
      - postgres
    entrypoint: "/mnt/initialize_database.sh"
    environment:
      PGHOST: postgres
      PGUSER: ${PGUSER}
      PGDATABASE: ${PGDATABASE}
      PGPORT: ${PGPORT}
      PGPASSWORD: ${PGPASSWORD}
    volumes:
      - "./database_setup:/mnt"
  pg_dump:
    image: postgres:16
    user: postgres
    depends_on: 
      - postgres
    entrypoint: "/bin/bash -c 'mkdir -p /mnt/dump/ && pg_dump ${PGDATABASE} > /mnt/dump/${PGDATABASE}.sql'"
    environment:
      PGHOST: postgres
      PGUSER: ${PGUSER}
      PGDATABASE: ${PGDATABASE}
      PGPORT: ${PGPORT}
      PGPASSWORD: ${PGPASSWORD}
    volumes:
      - "./database_setup:/mnt"

volumes:
  pgdata:
